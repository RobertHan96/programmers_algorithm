# 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다.
# 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다.
# 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다.
# 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다.
# 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

# 전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost,
# 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때,
# 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 전체 학생의 수는 2명 이상 30명 이하입니다.
# 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
# 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
# 여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
# 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며,
# 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.

# 입출력 예
# n	lost	reserve	return
# 5	[2, 4]	[1, 3, 5]	5
# 입출력 예 설명
# 예제 #1
# 1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.


# 일단 모두 체육복이 있다고 가정하고 학생수만큼 1이 담긴 배열 생성
# 거기서 lost의 인덱스-1 값을 for문으로 대입해서 0으로 변경
# 다시 for문으로 비교해서 anwer배열의 값이 0인 경우 if 문으로 n+1 or n-1이 reserve 배열 안에있으면 1로 바꾸고, 아니라면 pop으로 제거
# answer 배열의 길이르 정답으로 리턴
n = 5
my_lost = [2, 4]
my_reverse = [1, 3, 5]


def solution(n, lost, reserve):
    # 여분이 있지만 체육복을 잃어버린 학생이 있을수도 있기 때문에 set으로 lost, reserve의 중복 제거
    set_reserve = set(reserve)-set(lost)
    set_lost = set(lost) - set(reserve)
    # 진짜 여분이 있는 학생의 리스트를 확인하면서 앞or뒤의 학생 중 잃어버린 학생이 있는지 검사
    for student in set_reserve:
        if student-1 in set_lost:
            # 만약 앞/뒤에 잃어버린 학생이 있다면 체육복을 주면 되기 때문에 lost배열에서 해당 학생번호를 삭제함
            set_lost.remove(student-1)
        elif student+1 in set_lost:
            set_lost.remove(student+1)
    # for문 이후에는 set_lost에 여벌체육복도 받지 못한 학생만 남기 때문에 n-set_lost의 값을 정답으로 리턴
    return n-len(set_lost)
